var express = require('express');
var user = require('./node_modules/scripts/models/User');
var service = require('./services');
var mongoose = require('mongoose');

module.exports.getUsers = function (req, res){
	
	user.find(function(err, users){

				console.log("user");
			if(err)
				return res.send(err);

			return res.json(users);
	});
}

module.exports.registerUser = function(req, res){

		var userTemp = new user({

			email : req.body.email,
			password : req.body.password
		});

		user.findOne({email : userTemp.email}, function(err, oldUser){

			if(err){
				return res.status(400).send(err);
			}

			if(oldUser){
				return res.status(401).send({message : "El usuario ya existe"});
			}else{

				console.log(userTemp);

				// save al usuario y checkeo de errores
				userTemp.save(function(err){
					
					if(err){

						return res.status(400).send(err);
					}else{

						console.log("after user creation");
						return res
							.status(200)
		            		.send({token: service.createToken(user), 
		            				_id : userTemp._id, 
		            				email : userTemp.email});
					}
				});
			}	
		});
}

module.exports.login = function(req, res){

	user.findOne({email : req.body.email}, function(err, userTemp){

		if(err)
			return res.status(403).send(err);

		if(!userTemp){
			return res.status(403).send({message : "Usuario y/o contrase침a inv치lidos"});
		}

		if(userTemp.password != req.body.password){
			return res.status(403).send({message : "Usuario y/o contrase침a inv치lidos"});
		}

		return res
				.status(200)
				.json({token : service.createToken(user), _id : userTemp._id});
	});
}

module.exports.findUserById = function(req, res){

		user.findById(req.params._userId, function(err, userTemp){

			if(err)
				return res.status(400).send(err);
	
			return res.status(200).json(userTemp);
		});
}

module.exports.updateUser = function(req, res){

		user.findById(req.params._userId, function(err, userTemp){

			if(err)
				return res.send(err);

			if(!userTemp){

				return res.status(401).send({status : '401', message : 'User not found'});
			}

			if(req.body.firstName != null){

				userTemp.firstName = req.body.firstName;
			}
			if(req.body.lastName != null){

				userTemp.lastName = req.body.lastName;
			}
			if(req.body.dni != null){

				userTemp.dni = req.body.dni;
			}
			if(req.body.pushToken != null){
				userTemp.pushToken = req.body.pushToken;
			}

			userTemp.save(function(err){

				if(err)
					return res.status(400).send(err);

				return res.status(200).json(userTemp);	
			});
		});
}

module.exports.deleteUser = function(req, res){

	user.remove({_id: req.params._userId}, function(err, userTemp){
			
			if(err){
				return res.status(400).send(err);
			}
			if(!userTemp){
				return res.status(400).send(err);
			}
			return res.status(200).send({message : 'User deleted'});
	});
}

module.exports.cleanDB = function(req, res){

	user.remove({ }, function(err){

		if(err){
			return res.status(400).send(err);
		}else{
			console.log("DB cleaned");
			return res.status(200).send("Users cleaned");
		}
	});
}