var express = require('express');
var user = require('./node_modules/scripts/models/User');
var arrived = require('./node_modules/scripts/models/Arrived');
var alert = require('./node_modules/scripts/models/Alert');
var danger = require('./node_modules/scripts/models/Danger');

//<<<<<<< ARRIVALS >>>>>>>>
module.exports.onUserArrived = function(req, res, next){

		user.findById({_id : req.params._userId}, function(err, userTemp){

			if(err){
				return	res.status(400).send(err);
			}
			if(!userTemp){
				return res.status(400).send(err);
			}

			var arrivedTemp = new arrived({
								userId : userTemp._id,
								date : req.body.date,
								type : '3'
							});

			console.log(arrivedTemp);

			// save alert object y checkeo de errores
			arrivedTemp.save(function(err){
						
				if(err){

					return res.status(400).send(err);
				}else{

					console.log("after alert object creation");
					return res
						.status(200)
			           	.json(arrivedTemp);
				}
			});
	});
	next();
}

module.exports.getUserArrivals = function(req, res){

	user.findOne({email : req.params.email}, function(err, userTemp){

		if(err){
			return res.status(400).send(err);
		}
		if(!userTemp){
			return res.status(400).send({ message : 'Usuario no encontrado'});
		}

		arrived.find({userId : userTemp._id},function(err, arrivals){

			if(err){
				return res.status(400).send(err);
			}
			if(!arrivals){
				return res.status(400).send({ message : 'No se encontraron mensajes de llegada'});
			}

			return res.status(200).json(arrivals);
		});
	});
}

module.exports.deleteArrived = function(req, res){

	arrived.remove({_id: req.params._arrivedId}, function(err, arrivedTemp){
			
			if(err){
				return res.status(400).send(err);
			}
			if(!arrivedTemp){
				return res.status(400).send(err);
			}
			return res.send({message : 'Arrived deleted'});
	});
}

//<<<<<< ALERTS >>>>>>>
module.exports.updateAlertMessage = function(req, res){

	user.findById({_id : req.params._userId}, function(err, userTemp){

			if(err){
				return	res.status(400).send(err);
			}
			if(!userTemp){
				return res.status(400).send(err);
			}

			alert.findById({_id : req.params._alertId}, function(err, alertTemp){

				if(err){
					return	res.status(400).send(err);
				}
				if(!alertTemp){
					return res.status(400).send(err);
				}

				if(req.body.message != null){
					alertTemp.message = req.body.message;
				}
				if(req.body.date != null){
					alertTemp.date = req.body.date;
				}
				if(req.body.lat != null){
					alertTemp.lat = req.body.lat;
				}
				if(req.body.long != null){
					alertTemp.long = req.body.long;
				}

				// save alert object y checkeo de errores
				alertTemp.save(function(err){
								
					if(err){

						return res.status(400).send(err);
					}else{

						console.log("after alert object creation");
						return res
							.status(200)
					        .json(alertTemp);
						}
					});
				});
	});
}

module.exports.onUserAlerted = function(req, res, next){

	user.findById({_id : req.params._userId}, function(err, userTemp){

			if(err){
				return	res.status(400).send(err);
			}
			if(!userTemp){
				return res.status(400).send(err);
			}

			var alertTemp = new alert({
								userId : userTemp._id,
								date : req.body.date,
								type : '1'
							});

			console.log(alertTemp);

			// save alert object y checkeo de errores
			alertTemp.save(function(err){
						
				if(err){

					return res.status(400).send(err);
				}else{

					console.log("after alert object creation");
					return res
						.status(200)
			           	.json(alertTemp);
				}
			});
	});
	next();
}

module.exports.getUserAlerts = function(req, res){

	user.findOne({email : req.params.email}, function(err, userTemp){

		if(err){
			return res.status(400).send(err);
		}
		if(!userTemp){
			return res.status(400).send({ message : 'Usuario no encontrado'});
		}

		alert.find({userId : userTemp._id},function(err, alerts){

			if(err){
				return res.status(400).send(err);
			}
			if(!alerts){
				return res.status(400).send({ message : 'No se encontraron mensajes de alerta'});
			}

			return res.status(200).json(alerts);
		});
	});
}

module.exports.deleteAlert = function(req, res){

	alert.remove({_id: req.params._alertId}, function(err, alertTemp){
			
			if(err){
				return res.status(400).send(err);
			}
			if(!alertTemp){
				return res.status(400).send(err);
			}
			return res.send({message : 'Alert deleted'});
	});
}

//<<<<<< DANGERS >>>>>>
module.exports.updateDangersMessage = function(req, res){

	user.findById({_id : req.params._userId}, function(err, userTemp){

			if(err){
				return	res.status(400).send(err);
			}
			if(!userTemp){
				return res.status(400).send(err);
			}

			danger.findById({_id : req.params._dangerId}, function(err, dangerTemp){

				if(err){
					return	res.status(400).send(err);
				}
				if(!dangerTemp){
					return res.status(400).send(err);
				}

				if(req.body.message != null){
					dangerTemp.message = req.body.message;
				}
				if(req.body.date != null){
					dangerTemp.date = req.body.date;
				}
				if(req.body.lat != null){
					dangerTemp.lat = req.body.lat;
				}
				if(req.body.long != null){
					dangerTemp.long = req.body.long;
				}

				// save alert object y checkeo de errores
				dangerTemp.save(function(err){
								
					if(err){

						return res.status(400).send(err);
					}else{

						console.log("after alert object creation");
						return res
							.status(200)
					        .json(dangerTemp);
						}
					});
				});
	});
}

module.exports.onUserDanger = function(req, res, next){

	user.findById({_id : req.params._userId}, function(err, userTemp){

			if(err){
				return	res.status(400).send(err);
			}
			if(!userTemp){
				return res.status(400).send(err);
			}

			var dangerTemp = new danger({
								userId : userTemp._id,
								date : req.body.date,
								type : '2'
							});

			console.log(dangerTemp);

			// save alert object y checkeo de errores
			dangerTemp.save(function(err){
						
				if(err){

					return res.status(400).send(err);
				}else{

					console.log("after alert object creation");
					return res
						.status(200)
			           	.json(dangerTemp);
				}
			});
	});
	next();
}

module.exports.getUserDangers = function(req, res){

	user.findOne({email : req.params.email}, function(err, userTemp){

		if(err){
			return res.status(400).send(err);
		}
		if(!userTemp){
			return res.status(400).send({ message : 'Usuario no encontrado'});
		}
		danger.find(function(err, dangers){

			if(err){
				return res.status(400).send(err);
			}
			if(!dangers){
				return res.status(400).send({ message : 'No se encontraron mensajes de alerta'});
			}

			return res.status(200).json(dangers);
		});
	});
}

module.exports.deleteDanger = function(req, res){

	danger.remove({_id: req.params._dangerId}, function(err, dangerTemp){
			
			if(err){
				return res.status(400).send(err);
			}
			if(!dangerTemp){
				return res.status(400).send(err);
			}
			return res.status(200).send({message : 'Danger deleted'});
	});
}

module.exports.cleanArrivalsDB = function(req, res){

	arrived.remove({ }, function(err){

		if(err){
			return res.status(400).send(err);
		}else{
			console.log("DB cleaned");
			return res.status(200).send("Arrivals cleaned");
		}
	});
}

module.exports.cleanAlertsDB = function(req, res){

	alert.remove({ }, function(err){

		if(err){
			return res.status(400).send(err);
		}else{
			console.log("DB cleaned");
			return res.status(200).send("Alerts cleaned");
		}
	});
}

module.exports.cleanDangersDB = function(req, res){

	danger.remove({ }, function(err){

		if(err){
			return res.status(400).send(err);
		}else{
			console.log("DB cleaned");
			return res.status(200).send("Dangers cleaned");
		}
	});
}
