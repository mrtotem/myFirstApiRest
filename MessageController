var express = require('express');
var user = require('./node_modules/scripts/models/User');
var alert = require('./node_modules/scripts/models/Alert');
var danger = require('./node_modules/scripts/models/Danger');

var FCM = require('fcm-push');

var serverKey = 'AAAAH8KfAIY:APA91bENBod1lH6yfb9AWTz5yC7f2Lj1F07sws4dXiPKz1ziqa7mhKnviLdGtTI2jlEP3-2-J5k0jb4LAHbFjAJooNlJh1uQ9nurC16EMBQi7Mc8l0_orX-KyTDSB5YCiGcBNqkoT49OhfiqyikD-DnKR1XfNK0cdg';
var fcm = new FCM(serverKey);

//<<<<<<< ARRIVED >>>>>>>>
module.exports.onUserArrived = function(req, res){

	user.findById({_id : req.params._userId}, function(err, userTemp){

			if(err){
				return	res.status(400).send(err);
			}
			if(!userTemp){
				return res.status(400).send(err);
			}
			if(req.body.lat != null && req.body.long != null){

				return res.status(200).send({
				message : 'User arrived',
				lat : req.body.lat,
				long : req.body.long
				});
			}else{

				 var arrivedMessage = {

			        to: req.body.pushToken, // required fill with device token or topics
			        collapse_key: 'your_collapse_key',
			        notification: {
			            title: 'Mensage de llegada!',
			            body: 'Este es un mensaje de llegada'
			        }
				 };

				fcm.send(arrivedMessage, function(err, response){

					if (err) {
					       console.log("Something has gone wrong!");
					    }
				})
				.then(function(response){
				       console.log("Successfully sent with response: ", arrivedMessage);
				})
				.catch(function(err){
				     console.log("Something has gone wrong!");
				     console.error(err);
				});

				return res.status(200).send({message : 'User arrived'});
			}
			
	});
}

//<<<<<< ALERTS >>>>>>>
module.exports.updateAlertMessage = function(req, res){

	user.findById({_id : req.params._userId}, function(err, userTemp){

			if(err){
				return	res.status(400).send(err);
			}
			if(!userTemp){
				return res.status(400).send(err);
			}

			alert.findById({_id : req.params._alertId}, function(err, alertTemp){

				if(err){
					return	res.status(400).send(err);
				}
				if(!alertTemp){
					return res.status(400).send(err);
				}

				if(req.body.message != null){
					alertTemp.message = req.body.message;
				}
				if(req.body.date != null){
					alertTemp.date = req.body.date;
				}
				if(req.body.lat != null){
					alertTemp.lat = req.body.lat;
				}
				if(req.body.long != null){
					alertTemp.long = req.body.long;
				}

				// save alert object y checkeo de errores
				alertTemp.save(function(err){
								
					if(err){

						return res.status(400).send(err);
					}else{

						console.log("after alert object creation");
						return res
							.status(200)
					        .json(alertTemp);
						}
					});
				});
	});
}

module.exports.onUserAlerted = function(req, res){

	user.findById({_id : req.params._userId}, function(err, userTemp){

			if(err){
				return	res.status(400).send(err);
			}
			if(!userTemp){
				return res.status(400).send(err);
			}

			var alertTemp = new alert({
								userId : userTemp._id,
								date : req.body.date
							});

			console.log(alertTemp);

			// save alert object y checkeo de errores
			alertTemp.save(function(err){
						
				if(err){

					return res.status(400).send(err);
				}else{

					console.log("after alert object creation");
					return res
						.status(200)
			           	.json(alertTemp);
				}
			});
	});
}

module.exports.getUserAlerts = function(req, res){

	alert.find(function(err, alerts){

		if(err){
			return res.status(400).send(err);
		}
		if(!alerts){
			return res.status(400).send({ message : 'No se encontraron mensajes de alerta'});
		}

		return res.status(200).json(alerts);
	});
}

module.exports.deleteAlert = function(req, res){

	alert.remove({_id: req.params._alertId}, function(err, alertTemp){
			
			if(err){
				return res.status(400).send(err);
			}
			if(!alertTemp){
				return res.status(400).send(err);
			}
			return res.send({message : 'Alert deleted'});
	});
}

//<<<<<< DANGERS >>>>>>
module.exports.updateDangersMessage = function(req, res){

	user.findById({_id : req.params._userId}, function(err, userTemp){

			if(err){
				return	res.status(400).send(err);
			}
			if(!userTemp){
				return res.status(400).send(err);
			}

			danger.findById({_id : req.params._dangerId}, function(err, dangerTemp){

				if(err){
					return	res.status(400).send(err);
				}
				if(!dangerTemp){
					return res.status(400).send(err);
				}

				if(req.body.message != null){
					dangerTemp.message = req.body.message;
				}
				if(req.body.date != null){
					dangerTemp.date = req.body.date;
				}
				if(req.body.lat != null){
					dangerTemp.lat = req.body.lat;
				}
				if(req.body.long != null){
					dangerTemp.long = req.body.long;
				}

				// save alert object y checkeo de errores
				dangerTemp.save(function(err){
								
					if(err){

						return res.status(400).send(err);
					}else{

						console.log("after alert object creation");
						return res
							.status(200)
					        .json(dangerTemp);
						}
					});
				});
	});
}

module.exports.onUserDanger = function(req, res){

	user.findById({_id : req.params._userId}, function(err, userTemp){

			if(err){
				return	res.status(400).send(err);
			}
			if(!userTemp){
				return res.status(400).send(err);
			}

			var dangerTemp = new danger({
								userId : userTemp._id,
								date : req.body.date
							});

			console.log(dangerTemp);

			// save alert object y checkeo de errores
			dangerTemp.save(function(err){
						
				if(err){

					return res.status(400).send(err);
				}else{

					console.log("after alert object creation");
					return res
						.status(200)
			           	.json(dangerTemp);
				}
			});
	});
}

module.exports.getUserDangers = function(req, res){

	danger.find(function(err, dangers){

		if(err){
			return res.status(400).send(err);
		}
		if(!dangers){
			return res.status(400).send({ message : 'No se encontraron mensajes de alerta'});
		}

		return res.status(200).json(dangers);
	});
}

module.exports.deleteDanger = function(req, res){

	danger.remove({_id: req.params._dangerId}, function(err, dangerTemp){
			
			if(err){
				return res.status(400).send(err);
			}
			if(!dangerTemp){
				return res.status(400).send(err);
			}
			return res.status(200).send({message : 'Danger deleted'});
	});
}